openapi: 3.1.0
info:
  title: Raindrop Enhancer Integration
  version: 0.1.0
  description: >-
    Minimal contract documenting Raindrop API requests used by the CLI and
    expected response shapes for collections and bookmarks. Aligns with
    https://developer.raindrop.io guidance including OAuth bearer auth and
    120-requests-per-minute rate limiting surfaced via `X-RateLimit-*` headers.
servers:
  - url: https://api.raindrop.io/rest/v1
paths:
  /collections:
    get:
      summary: List collections for the authenticated user
      operationId: listCollections
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Collections fetched successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionList"
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/RateLimitLimit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/RateLimitRemaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/RateLimitReset"
        "401":
          description: Invalid or expired token
        "429":
          description: Rate limited — caller must retry with backoff respecting reset header
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/RateLimitLimit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/RateLimitRemaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/RateLimitReset"
  /raindrops/{collectionId}:
    get:
      summary: List raindrops within a collection
      operationId: listRaindrops
      security:
        - bearerAuth: []
      parameters:
        - name: collectionId
          in: path
          required: true
          schema:
            type: integer
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum: [created]
        - name: search
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
        - name: perpage
          in: query
          required: false
          schema:
            type: integer
            default: 50
            maximum: 100
        - name: lastUpdate
          in: query
          required: false
          description: ISO timestamp; when provided, only return items updated after this moment
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: List of raindrops for the collection
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RaindropList"
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/RateLimitLimit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/RateLimitRemaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/RateLimitReset"
        "401":
          description: Invalid or expired token
        "429":
          description: Rate limited — caller must retry with backoff respecting reset header
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/RateLimitLimit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/RateLimitRemaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/RateLimitReset"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: Token
  schemas:
    CollectionList:
      type: object
      required: [result, items]
      properties:
        result:
          type: boolean
          const: true
        items:
          type: array
          items:
            $ref: "#/components/schemas/Collection"
    Collection:
      type: object
      required: [id, title, lastUpdate]
      properties:
        id:
          type: integer
        title:
          type: string
        color:
          type: string
          nullable: true
        parent:
          type: integer
          nullable: true
        lastUpdate:
          type: string
          format: date-time
    RaindropList:
      type: object
      required: [result, items]
      properties:
        result:
          type: boolean
          const: true
        items:
          type: array
          items:
            $ref: "#/components/schemas/Raindrop"
        count:
          type: integer
        page:
          type: integer
        perpage:
          type: integer
    Raindrop:
      type: object
      required: [id, title, link, tags, created, lastUpdate]
      properties:
        id:
          type: integer
        collectionId:
          type: integer
        title:
          type: string
        excerpt:
          type: string
          nullable: true
        link:
          type: string
          format: uri
        tags:
          type: array
          items:
            type: string
        created:
          type: string
          format: date-time
        lastUpdate:
          type: string
          format: date-time
        cover:
          type: string
          format: uri
          nullable: true
        domain:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
  headers:
    RateLimitLimit:
      description: Maximum number of requests permitted per minute (typically 120)
      schema:
        type: integer
    RateLimitRemaining:
      description: Remaining requests in current rate-limit window
      schema:
        type: integer
    RateLimitReset:
      description: Epoch seconds until current rate-limit window resets
      schema:
        type: integer
